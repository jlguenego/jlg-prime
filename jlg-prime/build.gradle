/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'signing'
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1-jre'
}


group = 'io.github.jlguenego'
// version = '0.0.1-SNAPSHOT'
version = '0.0.1'

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'jlg-prime'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = "${project.group}:${project.name}"
                description = 'Toolset for prime numbers'
                url = 'https://github.com/jlguenego/jlg-prime'
                properties = [:
                              // myProp: "value",
                              // "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://github.com/jlguenego/jlg-prime/blob/master/LICENSE.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jlguenego'
                        name = 'Jean-Louis GUENEGO'
                        email = 'jlguenego@gmail.com'
                        organizationUrl = 'https://github.com/jlguenego'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/jlguenego/jlg-prime.git'
                    developerConnection = 'scm:git:https://github.com/jlguenego/jlg-prime.git'
                    url = 'https://github.com/jlguenego/jlg-prime'
                }
            }
        }
    }
    repositories {
        maven {
            name = "Maven"
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }

        maven {
            name = "OSSRH"
            def releasesRepoUrl =  "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                // values are defined in %GRADLE_USER_HOME%/gradle.properties
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.register('jlg') {
    group 'Documentation'
    description 'Print a message to JLG.'
    doLast {
        println "Coucou jlg!!!"
        println "user.dir=" + System.getProperty("user.dir")
        println "jlg.message=" + System.getProperty("jlg.message")
        println "jlg.otherMessage=" + project.property('otherMessage')
        println "org.gradle.project.toto=" + project.property('org.gradle.project.toto')
        println "layout=" + layout.getProjectDirectory()
        println "ossrhUsername=" + ossrhUsername
    }
}



